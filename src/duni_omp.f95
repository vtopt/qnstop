      FUNCTION DUNI()
!***BEGIN PROLOGUE  DUNI
!***DATE WRITTEN   880714 (YYMMDD)
!***REVISION DATE  880714 (YYMMDD)
!***REVISION DATE  20150306 (YYYYMMDD) Converted to Fortran 2003 and OpenMP
! by Brandon D. Amos and Layne T. Watson.
!***CATEGORY NO.  L6A21
!***KEYWORDS  RANDOM NUMBERS, UNIFORM RANDOM NUMBERS
!***AUTHOR    KAHANER, DAVID, SCIENTIFIC COMPUTING DIVISION, NBS
!             MARSAGLIA, GEORGE, SUPERCOMPUTER RES. INST., FLORIDA ST. U.
!
!***PURPOSE  THIS ROUTINE GENERATES REAL(KIND=R8) UNIFORM
!             RANDOM NUMBERS ON [0,1)
!***DESCRIPTION
!        COMPUTES REAL(KIND=R8) UNIFORM NUMBERS ON [0,1).
!           FROM THE BOOK, "NUMERICAL METHODS AND SOFTWARE" BY
!                D. KAHANER, C. MOLER, S. NASH
!                PRENTICE HALL, 1988
!
!       USAGE:
!              TO INITIALIZE THE GENERATOR
!                   USEED = DUSTAR(ISEED)
!               WHERE: ISEED IS ANY NONZERO INTEGER
!                  WILL RETURN FLOATING POINT VALUE OF ISEED.
!
!               SUBSEQUENTLY
!                       U = DUNI()
!                  WILL RETURN A REAL UNIFORM ON [0,1)
!
!                ONE INITIALIZATION IS NECESSARY, BUT ANY NUMBER OF EVALUATIONS
!                  OF DUNI IN ANY ORDER, ARE ALLOWED.
!
!           NOTE: DEPENDING UPON THE VALUE OF K (SEE BELOW), THE OUTPUT
!                       OF DUNI MAY DIFFER FROM ONE MACHINE TO ANOTHER.
!
!           TYPICAL USAGE:
!
!               USE REAL_PRECISION, ONLY: R8
!               REAL(KIND=R8):: U,DUNI,DUSTAR,USEED
!               INTEGER ISEED
!!                 SET SEED
!               ISEED = 305
!               USEED = DUSTAR(ISEED)
!               DO 1 I = 1,1000
!                   U = DUNI()
!             1 CONTINUE
!!                 NOTE: IF K=47 (THE DEFAULT, SEE BELOW) THE OUTPUT VALUE OF
!!                           U WILL BE 0.812053811384E-01...
!               WRITE(*,*) U
!               END
!
!          NOTE ON PORTABILITY: USERS CAN CHOOSE TO RUN DUNI IN ITS DEFAULT
!               MODE (REQUIRING NO USER ACTION) WHICH WILL GENERATE THE SAME
!               SEQUENCE OF NUMBERS ON ANY COMPUTER SUPPORTING FLOATING POINT
!               NUMBERS WITH AT LEAST 47 BIT MANTISSAS, OR IN A MODE THAT
!               WILL GENERATE NUMBERS WITH A LONGER PERIOD ON COMPUTERS WITH
!               LARGER MANTISSAS.
!          TO EXERCISE THIS OPTION:  B E F O R E  INVOKING DUSTAR INSERT
!               THE INSTRUCTION        UBITS = DUNIB(K)      K >= 47
!               WHERE K IS THE NUMBER OF BITS IN THE MANTISSA OF YOUR FLOATING
!               POINT WORD (K=96 FOR CRAY, CYBER 205). DUNIB RETURNS THE
!               FLOATING POINT VALUE OF K THAT IT ACTUALLY USED.
!                    K INPUT AS .LE. 47, THEN UBITS=47.
!                    K INPUT AS .GT. 47, THEN UBITS=FLOAT(K)
!               IF K>47 THE SEQUENCE OF NUMBERS GENERATED BY DUNI MAY DIFFER
!               FROM ONE COMPUTER TO ANOTHER.
!
!
!
!***REFERENCES  MARSAGLIA G., "COMMENTS ON THE PERFECT UNIFORM RANDOM
!                 NUMBER GENERATOR", UNPUBLISHED NOTES, WASH S. U.
!***ROUTINES CALLED  (NONE)
!***END PROLOGUE DUNI
      USE REAL_PRECISION, ONLY: R8
      IMPLICIT NONE
      REAL(KIND=R8):: DUNI,DUSTAR,DUNIB

      REAL(KIND=R8), PARAMETER:: &
          CSAVE=0.9162596898123E+13_R8/0.140737488355328E+15_R8, &
          CD=0.76543212345678E+14_R8/0.140737488355328E+15_R8, &
          CM=0.140737488355213E+15_R8/0.140737488355328E+15_R8
!                            2**47=0.140737488355328E+15_R8
      REAL(KIND=R8):: C,S,T,U(17)
      INTEGER:: I,II,ISEED,I1,J,JJ,J1,K,KK,K1,L1,M1
!
      SAVE:: C,I,J,K,U
!      LOAD DATA ARRAY IN CASE USER FORGETS TO INITIALIZE.
!      THIS ARRAY IS THE RESULT OF CALLING DUNI 100000 TIMES
!         WITH ISEED=305 AND K=96.
      DATA U/ &
        0.471960981577884755837789724978E+00_R8, &
        0.930323453205669578433639632431E+00_R8, &
        0.110161790933730836587127944899E+00_R8, &
        0.571501996273139518362638757010E-01_R8, &
        0.402467554779738266237538503137E+00_R8, &
        0.451181953427459489458279456915E+00_R8, &
        0.296076152342721102174129954053E+00_R8, &
        0.128202189325888116466879622359E-01_R8, &
        0.314274693850973603980853259266E+00_R8, &
        0.335521366752294932468163594171E-02_R8, &
        0.488685045200439371607850367840E+00_R8, &
        0.195470426865656758693860613516E+00_R8, &
        0.864162706791773556901599326053E+00_R8, &
        0.335505955815259203596381170316E+00_R8, &
        0.377190200199058085469526470541E+00_R8, &
        0.400780392114818314671676525916E+00_R8, &
        0.374224214182207466262750307281E+00_R8/
      DATA C,I,J,K /CSAVE,17,5,47/
!
!$OMP THREADPRIVATE(C,I,J,K,U)
!
!   BASIC GENERATOR IS FIBONACCI.
!
      DUNI = U(I)-U(J)
      IF (DUNI .LT. 0.0_R8) DUNI = DUNI+1.0_R8
      U(I) = DUNI
      I = I-1
      IF (I .EQ. 0) I = 17
      J = J-1
      IF (J .EQ. 0) J = 17
!
!   SECOND GENERATOR IS CONGRUENTIAL.
!
      C = C-CD
      IF (C .LT. 0.0_R8) C=C+CM
!
!   COMBINATION GENERATOR.
!
      DUNI = DUNI-C
      IF (DUNI .LT. 0.0_R8) DUNI = DUNI+1.0_R8
      RETURN
!
      ENTRY DUSTAR(ISEED)
!
!          SET UP ...
!          CONVERT ISEED TO FOUR SMALLISH POSITIVE INTEGERS.
!
        I1 = MOD(ABS(ISEED),177)+1
        J1 = MOD(ABS(ISEED),167)+1
        K1 = MOD(ABS(ISEED),157)+1
        L1 = MOD(ABS(ISEED),147)+1
!
!          GENERATE RANDOM BIT PATTERN IN ARRAY BASED ON GIVEN SEED.
!
        DO 2 II = 1,17
          S = 0.0_R8
          T = 0.5_R8
!             DO FOR EACH OF THE BITS OF MANTISSA OF WORD,
!             LOOP OVER K BITS, WHERE K IS DEFAULTED TO 47 BUT CAN
!             BE CHANGED BY USER CALL TO DUNIB(K).
          DO 3 JJ = 1,K
                  M1 = MOD(MOD(I1*J1,179)*K1,179)
                  I1 = J1
                  J1 = K1
                  K1 = M1
                  L1 = MOD(53*L1+1,169)
                  IF (MOD(L1*M1,64) .GE. 32) S=S+T
                  T = 0.5_R8*T
    3     CONTINUE
          U(II) = S
    2   CONTINUE
        DUSTAR = REAL(ISEED,R8)
        RETURN
!
      ENTRY DUNIB(KK)
        IF (KK .LE. 47) THEN
             K=47
        ELSE
             K=KK
        ENDIF
        DUNIB=REAL(K,R8)
      END
